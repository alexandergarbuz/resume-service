spring.application.name=Resume Service

server.port=${WEB_SERVER_PORT:80}
# To set up different context path use similar syntax
#  server.servlet.context-path=/resume/
#
server.servlet.context-path=/

# Configuring automatic hot re-deployment
# of the project when one of the files have 
# changed.
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true


#Database configuration
spring.datasource.url=${MYSQL_URL:jdbc:mysql://localhost:3306/resume_manager_db}
spring.datasource.username=${MYSQL_USER:resume_user}
spring.datasource.password=${MYSQL_PASS:resume_password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.sql.init.platform=mysql
# Delaying execution of the initialization SQL sxcript
# until JPA creates the table structure
spring.jpa.defer-datasource-initialization=true
# Enabling intialization mode. Other options are never and embeded 
spring.sql.init.mode=always

# JPA Properties
# Enables hibernate to print the generated SQL into standard output. 
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database=mysql
spring.jpa.database-platform=mysql

# Only used for local development as it drops the schema at the end of the session
# For production, this would be set to "validate" validate the schema, 
# makes no changes to the database
# none: The default for MySQL. No change is made to the database structure.
# update: Hibernate changes the database according to the given entity structures.
# create: Creates the database every time but does not drop it on close.
# create-drop: Creates the database and drops it when SessionFactory closes.
spring.jpa.hibernate.ddl-auto=update

# Logging configuration
logging.level.com.garbuz.resume=DEBUG
#logging.level.root=DEBUG
#logging.level.org.springframework.web=ERROR
#logging.level.org.hibernate=ERROR